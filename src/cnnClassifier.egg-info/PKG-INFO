Metadata-Version: 2.4
Name: cnnClassifier
Version: 0.0.0
Summary: A small python package for CNN
Home-page: https://github.com/shivaganesh-koppishetty/oral-lesion-detection-ai
Author: shivaganesh-koppishetty
Author-email: koppishettyshivaganesh@gmail.com
Project-URL: Bug Tracker, https://github.com/shivaganesh-koppishetty/oral-lesion-detection-ai/issues
Description-Content-Type: text/markdown
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: project-url
Dynamic: summary

# Oral Lesion Detection AI

### Navigation Map
- [Overview](#overview)
- [Environment Setup](#environment-setup)
- [About the Dataset](#about-the-dataset)
- [Project Structure](#project-structure)
- [Development Workflow](#development-workflow)
- [Acknowledgements](#acknowledgements)
- [Connect with Me](#connect-with-me)

---

### Overview
This project lies within the intersection of Healthcare and Artificial Intelligence, applying deep learning techniques to the field of medical imaging. It focuses on detecting oral lesions from clinical mouth images using a binary classification model — identifying images as either healthy or showing signs of potential abnormalities.

Using Convolutional Neural Networks (CNNs) and a transfer learning approach, the model is fine-tuned on a curated dataset of oral images. This enhances its ability to recognize subtle patterns and visual cues relevant to oral pathology.

---

### Environment Setup
For the portal to run, python packages will be required .This whole portal is build on python3.11 so the required packages are mentioned in a file named as requirements.txt from where we can download all the required libraries in a single go by just typing the following command in the command prompt after installing python.
```bash
pip install -r requirements.txt
```
---

### About the Dataset
This project utilizes the Oral Cancer Image Dataset from Kaggle, which contains a collection of labeled clinical images representing both healthy oral cavities and those with visible lesions. The dataset is well-balanced, making it suitable for training deep learning models for binary classification.

Curated to support research in automated oral lesion detection, the dataset provides high-quality images that facilitate the development of accurate and reliable diagnostic tools. It serves as a valuable resource for advancing early detection and intervention techniques in oral healthcare through machine learning and computer vision.

---

### Project Structure
```text
oral-lesion-detection-ai/
├── artifacts/
├── config/
│   └── config.yaml
├── logs/
│   └── running_logs.log
├── research/
│   └── notebooks/
├── src/
│   ├── cnnClassifier/
│   │   ├── components/
│   │   ├── config/
│   │   ├── constants/
│   │   ├── entity/
│   │   ├── pipeline/
│   │   └── utils/
│   └── __init__.py
├── templates/
│   └── index.html
├── .gitignore
├── dvc.yaml
├── main.py
├── params.yaml
├── README.md
├── requirements.txt
├── scores.json
├── setup.py
└── template.py
```

---

### Development Workflow
1. Update config.yaml – Define file paths, model configurations, and directory structure
2. Update params.yaml – Set model training parameters such as image size, learning rate, batch size, etc.
3. Update Entity Classes – Define structured data models using Python dataclasses
4. Update Configuration Manager (src/cnnClassifier/config) – Read and validate configurations
5. Update Components – Implement core logic like data ingestion, model creation, training, and evaluation
6. Update Pipeline Stages – Connect components to form modular pipeline stages
7. Update main.py – Run all pipeline stages sequentially using a central controller
8. Update dvc.yaml – Define and version the DVC pipeline for reproducibility
9. Update or Run app.py – Launch the Flask web application for image-based predictions

---

### Acknowledgements
I would like to thank the individuals, tools, and open-source communities that contributed—directly or indirectly—to the development of this project:
- Kaggle – Oral Cancer Image Dataset – For providing a high-quality dataset for training and evaluation
- TensorFlow & Keras – For enabling efficient deep learning model development
- Flask – For supporting quick and easy model deployment as a web application
- DVC and MLflow – For experiment tracking, data versioning, and pipeline reproducibility
- DagsHub – For integrating version control, data tracking, and ML experiment management in one collaborative platform
- VS Code, Git & GitHub – For providing a stable development environment and version control workflow
- Official Documentation & Developer Guides – Referred throughout the project for TensorFlow, Flask, DVC, MLflow, and other tools to ensure best practices and correct implementation
- Open Source Community – For tutorials, blog posts, and community support that greatly enhanced my understanding and helped troubleshoot challenges
This project is a reflection of collective knowledge shared by the global developer community—thank you!

---

### Technologies & Tools Used

<p align="center">
  <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg" alt="Python" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/tensorflow/tensorflow-original.svg" alt="TensorFlow" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/keras/keras-original.svg" alt="Keras" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://www.pngaaa.com/api-download/3594027" alt="Flask" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://img.icons8.com/?size=100&id=12599&format=png&color=FFFFFF" alt="GitHub" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://www.stickpng.com/img/download/62a6365f03a870b920cbfd45/image" alt="Git" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/vscode/vscode-original.svg" alt="VS Code" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://upload.wikimedia.org/wikipedia/commons/a/af/Data_Version_Control._Official_Logo_by_Iterative.ai.png?download" alt="DVC" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://www.pngaaa.com/api-download/5543747" alt="MLflow" height="40"/>
  &nbsp;&nbsp;&nbsp;
  <img src="https://user-images.githubusercontent.com/611655/181510038-e38f4001-c304-411e-8f45-f71554eb9763.png" alt="DagsHub" height="40"/>
</p>


---

### Connect with Me

| Platform       | Link                                                                 |
|----------------|----------------------------------------------------------------------|
| 💼 LinkedIn     | [shivaganesh-koppishetty](https://www.linkedin.com/in/shivaganesh-koppishetty/) |
| 💻 GitHub       | [shivaganesh-koppishetty](https://github.com/shivaganesh-koppishetty) |
| ✉️ Email         | koppishetty.shivaganesh@gmail.com                                              |

Feel free to reach out for collaborations, project ideas, or just to connect!

---
